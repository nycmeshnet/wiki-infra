apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bookstack-helm.fullname" . }}-bookstack
  namespace: {{ .Values.meshwiki_app_namespace }}
  labels:
    {{- include "bookstack-helm.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "bookstack-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: bookstack
        {{- include "bookstack-helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-bookstack
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.bookstack.service.port }}
              protocol: TCP
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: TZ
            - name: PUID
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: PUID
            - name: PGID
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: PGID
            - name: APP_URL
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: APP_URL
            - name: APP_VIEWS_BOOKS
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: APP_VIEWS_BOOKS
            - name: ALLOWED_IFRAME_SOURCES
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: ALLOWED_IFRAME_SOURCES
            - name: MAIL_HOST
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: MAIL_HOST
            - name: MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: MAIL_PORT
            - name: MAIL_FROM
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: MAIL_FROM
            - name: MAIL_FROM_NAME
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: MAIL_FROM_NAME
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: mail-username
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: mail-password
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: DB_HOST
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: DB_DATABASE
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: db-username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: db-password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: secret-access-key
            - name: BACKUP_S3_URL
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: backup-s3-url
          volumeMounts:
            - name: config-vol
              mountPath: /config
            - name: image-uploads-vol
              mountPath: /app/www/public/img
            - name: backup-script
              mountPath: /backup.files.sh
              subPath: backup.files.sh
              readOnly: true
          {{- if .Values.bookstack.enableLivenessProbe }}
          livenessProbe:
            httpGet:
              path: /status
              port: 80
            initialDelaySeconds: {{ .Values.bookstack.livenessProbeInitialDelaySeconds }}
            periodSeconds: {{ .Values.bookstack.livenessProbePeriodSeconds }}
          {{- end }}
          {{- if .Values.bookstack.enableReadinessProbe }}
          readinessProbe:
            httpGet:
              path: /status
              port: 80
            initialDelaySeconds: {{ .Values.bookstack.readinessProbeInitialDelaySeconds }}
            periodSeconds: {{ .Values.bookstack.readinessProbePeriodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.bookstack.resources | nindent 12 }}
      initContainers:
        - name: backup-cron
          image: alpine:latest
          restartPolicy: Always
          command: ['sh', '/backup.entrypoint.sh']
          env:
            - name: APP_URL
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: APP_URL
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: secret-access-key
            - name: BACKUP_S3_URL
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: backup-s3-url
          volumeMounts:
            - name: config-vol
              mountPath: /config
            - name: image-uploads-vol
              mountPath: /app/www/public/img
            - name: backup-script
              mountPath: /backup.files.sh
              subPath: backup.files.sh
              readOnly: true
            - name: backup-entrypoint
              mountPath: /backup.entrypoint.sh
              subPath: backup.entrypoint.sh
              readOnly: true
      volumes:
        - name: config-vol
          persistentVolumeClaim:
            claimName: {{ .Values.bookstack.config_pvc_name }}
        - name: image-uploads-vol
          persistentVolumeClaim:
            claimName: {{ .Values.bookstack.image_pvc_name }}
        - name: backup-script
          configMap:
            name: backup-script
            items:
              - key: backup.files.sh
                path: backup.files.sh
        - name: backup-entrypoint
          configMap:
            name: backup-script
            items:
              - key: backup.entrypoint.sh
                path: backup.entrypoint.sh
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
