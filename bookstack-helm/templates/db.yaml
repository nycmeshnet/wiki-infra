apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bookstack-helm.fullname" . }}-db
  namespace: {{ .Values.meshwiki_app_namespace }}
  labels:
    {{- include "bookstack-helm.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "bookstack-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: wiki-db
        {{- include "bookstack-helm.labels" . | nindent 8 }}-db
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-db
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.db_image.repository }}:{{ .Values.db_image.tag }}"
          imagePullPolicy: {{ .Values.db_image.pullPolicy }}
          ports:
            - name: db
              containerPort: {{ .Values.bookstack.db.port }}
              protocol: TCP
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: TZ
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: wikiconfig
                  key: DB_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: db-username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: db-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wiki-secrets
                  key: db-root-password
          volumeMounts:
            - name: mysql-data-vol
              mountPath: /config
          
          {{- if .Values.bookstack.db.enableReadinessProbe -}}
          readinessProbe:
            exec:
              command:
                - sh 
                - "-c" 
                - | 
                  mysql -uroot -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'
            initialDelaySeconds: {{ .Values.bookstack.db.readinessProbeInitialDelaySeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.bookstack.db.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: mysql-data-vol
          persistentVolumeClaim:
            claimName: {{ .Values.bookstack.db.pvc_name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
